.. SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com/>
..
.. SPDX-License-Identifier: CC-BY-NC-SA-4.0

.. _post-inst:

.. div:: sd-fs-5

   :octicon:`gear`  Post Installation tasks

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 4: Set up PostgreSQL and Pgpool-II
   ^^^^

   .. note:: This step is optional, but strongly suggested.

   PostgreSQL database is used by |product| and, to improve connection
   efficiency and resource consumption, we set up `Pgpool
   <https://pgpool.net/mediawiki/index.php/Main_Page>`_ to work with
   PostgreSQL.

   First, modify the port on which PostgreSQL listens for
   connections.

   .. code:: console

      # vi /etc/postgresql/12/main/postgresql.conf
      # port = 5433
      # systemctl stop postgresql

   Next, configure pgpool to use PostgreSQL's port.

   .. code:: console

      # echo "backend_clustering_mode = 'raw'
      # port = 5432
      # backend_hostname0 = '127.0.0.1'
      # backend_port0 = 5433" > /etc/pgpool2/pgpool.conf

   Finally,  restart both services using this single command.

   .. code:: console

      # systemctl restart pgpool2.service

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 5: Bootstrap |product|
   ^^^^

   Once all packages have been installed and the PostgreSQL user and
   database for |file| have been setup, use the following command to
   configure and launch |product|.

   .. code:: console

      # carbonio-bootstrap

   Before finalising the bootstrap, press :bdg-dark-line:`y` to apply the
   configuration. The process will continue until its completion:
   click :bdg-dark-line:`Enter` to continue.

   .. dropdown:: What does ``carbonio-bootstrap`` do?

      This command makes a few checks and then starts the
      installation, during which a few messages are shown,
      including the name of the log file that will store all
      messages produced during the process::

        Operations logged to /tmp/zmsetup.20211014-154807.log

      In case the connection is lost during the installation, it is
      possible to log in again and check the content of that file
      for information about the status of the installation. If the
      file does not exist anymore, the installation has already
      been completed and in that case the log file can be found in
      directory :file:`/opt/zextras/log`.

      The first part of the bootstrap enables all necessary
      services and creates a new administrator account
      (zextras\@carbonio.local), initially **without password**
      (see below for instruction to set it).

.. _config-setup-tasks:

.. div:: sd-fs-5

   :octicon:`gear`  Configuration and Setup tasks

The next steps concern the configuration and setup of the various
|product| components.

.. _installation-step-mesh:

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 6: Setup |mesh|
   ^^^^

   |mesh| is required to allow communication between |product| and its
   components. The configuration is automatically generated by command

   .. code:: bash

      # service-discover setup $(hostname -i) --password=My_Mesh_Password£0!

   .. hint:: Replace ``My_Mesh_Password£0!`` with a **robust** password of your choice.

   This command will:

   * find the hostname IP address (:command:`hostname -i`)

   * set the **cluster credential password** to
     ``My_Mesh_Password£0!``, which is used for setups, management,
     and to access the administration GUI. See section :ref:`mesh-gui`
     for more information.

   * store the setup in file
     :file:`/etc/zextras/service-discover/cluster-credentials.tar.gpg`

     .. warning:: Make sure to store the password in a safe place
        (like e.g., a password manager). In case the password is lost
        or the credential file becomes corrupted and unusable, you can
        :ref:`mesh-reset`.

   Complete |mesh| and |product| setup by running

   .. code:: console

      # pending-setups


.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 7: Configure |product| Databases
   ^^^^

   |product| relies on a number of databases to store and keep track
   of all the objects it needs to manage, therefore it is necessary to
   create and configure all of them using these commands. First,
   become the postgres users and start ``psql``.

   .. code:: console

      # sudo -u postgres psql

   Then run the following command in order to create roles, database,
   and grant appropriate access rights.

   .. code:: psql


      # CREATE ROLE "carbonio-files-adm" WITH LOGIN SUPERUSER encrypted password 'My-Files-pwd01$'
      # CREATE DATABASE "carbonio-files-adm" owner "carbonio-files-adm"
      # CREATE ROLE "powerstore" WITH LOGIN encrypted password 'My-PowerStore-pwd98%'
      # CREATE DATABASE "powerstore" owner "powerstore"
      # CREATE ROLE "activesync" WITH LOGIN encrypted password 'My-Sync-pass-_#4'
      # CREATE DATABASE "activesync" owner "activesync"
      # CREATE ROLE "abq" WITH LOGIN encrypted password 'My_AbQ-psw]4<'
      # CREATE DATABASE "abq" owner "abq"
      # \q

   .. hint:: Make sure to use *different* passwords for each role.

   Remember to replace all passwords with **robust** passwords of your
   choice and store them in a safe place (preferably using a password
   manager), as you might need them in the future.

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 8: Bootstrap Database of |file|
   ^^^^^

   The final steps is to bootstrap |file|\'s DB (replacing the example
   password **My-Files-pwd01$** with the chosen one):

   .. code:: console

      # PGPASSWORD=My-Files-pwd01$ carbonio-files-db-bootstrap carbonio-files-adm 127.0.0.1

.. _vs_installation:

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 9: |vs| and video recording
   ^^^^^

   :ref:`videoserver` is |carbonio| component that provides
   video-conferencing and video-recording functionalities to
   |team|. Since it is not installed by default, you need to install
   it separately.

   .. tab-set::

       .. tab-item:: Ubuntu
          :sync: ubuntu

          .. code:: console

             # apt install carbonio-videoserver carbonio-videoserver-recorder

       .. tab-item:: RHEL
          :sync: rhel

          .. code:: console

             # dnf install carbonio-videoserver carbonio-videoserver-recorder

   Once the package has been successfully installed, you will be asked
   for the **public IP Address** of |vs|: enter it, then execute the
   following commands to start the service.

   .. code:: console

      # systemctl enable videoserver.service
      # systemctl start  videoserver.service

   Finally, the following commands enable video recording and must be
   executed as the ``zextras`` user.

   .. code::

      # su - zextras
      # carbonio chats video-server add example.com port 8100 servlet_port 8090 secret MY_Video-ReC-pass7=6
      # carbonio config set global teamVideoServerRecordingEnabled true
      # carbonio config set cos default teamChatEnabled true

   Here, port **8100** is the default port used by |vs|, while
   **8090** for recording. Change these values according to your needs
   or preferences. Remember also to replace **example.com** with your
   domain name.

   In case you forget the password used for the video recording setup,
   (*MY_Video-ReC-pass7=6*), you can retrieve it using this command.

   .. code:: console

      # grep -i -e nat_1_1 -e api_secret /etc/janus/janus.jcfg

   For information about |vs|, advances settings, and recording
   options, refer to Section :ref:`videoserver`.


.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 10: JDBC Configuration
   ^^^^^

   This is the last configuration step and will set up the JDBC
   connections with PostgreSQL.

   .. code:: console

      # carbonio config set global powerstoreMetadataDb '{"url":"jdbc:postgresql://127.0.0.1:20003/powerstore","user":"powerstore","password":"My-PowerStore-pwd98%"}'
      # carbonio config set global activeSyncDb '{"url":"jdbc:postgresql://127.0.0.1:20003/activesync","user":"activesync","password":"My-Sync-pass-_#4"}'
      # carbonio config set global abqMetadataDb '{"url":"jdbc:postgresql://127.0.0.1:20003/abq","user":"abq","password":"'My_AbQ-psw]4<"}'
      # carbonio mobile doRestartService module
      # carbonio powerstore doRestartService module

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 11: License Activation
   ^^^^^
   We are now on the last mile. To verify there is no dangling installation or
   configuration task, run:

   .. code:: console

      # pending-setups

   Finally, as the ``zextras`` user, activate |product| license,
   replacing **TOKEN** with your licence token.

   .. code:: console

      # carbonio core activate-license TOKEN
