.. SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com/>
..
.. SPDX-License-Identifier: CC-BY-NC-SA-4.0

.. _post-inst:

.. div:: sd-fs-5

   :octicon:`gear`  Post Installation tasks


.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 4: Create Database Admin account
   ^^^^^

   Create a ``postgres`` superuser with password **my_pg_password#3**
   (use a **robust** password of your choice).

   .. code:: console

      # sudo -u postgres psql
      # CREATE ROLE "carbonio-files-adm" WITH LOGIN SUPERUSER encrypted password 'my_pg_password#3';CREATE DATABASE "carbonio-files-adm" owner "carbonio-files-adm";
      # \q


.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 5: Bootstrap |product|
   ^^^^^

   Once all packages have been installed and the PostgreSQL user and
   database for |file| have been setup, use the following command to
   configure and launch |product|.

   .. code:: console

      # carbonio-bootstrap

   Before finalising the bootstrap, press :bdg-dark-line:`y` to apply the
   configuration. The process will continue until its completion:
   click :bdg-dark-line:`Enter` to continue.

   .. dropdown:: What does ``carbonio-bootstrap`` do?

      This command makes a few checks and then starts the
      installation, during which a few messages are shown,
      including the name of the log file that will store all
      messages produced during the process::

        Operations logged to /tmp/zmsetup.20211014-154807.log

      In case the connection is lost during the installation, it is
      possible to log in again and check the content of that file
      for information about the status of the installation. If the
      file does not exist anymore, the installation has already
      been completed and in that case the log file can be found in
      directory :file:`/opt/zextras/log`.

      The first part of the bootstrap enables all necessary
      services and creates a new administrator account
      (zextras\@carbonio.local), initially **without password**
      (see below for instruction to set it).

.. _config-setup-tasks:

.. div:: sd-fs-5

   :octicon:`gear`  Configuration and Setup tasks

.. _installation-step-mesh:

The next steps concern the configuration and setup of the various
|product| components.

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 6: Setup |mesh|
   ^^^^^

   |mesh| is required to allow communication between |product| and ts
   components. The configuration is automatically generated by command

   .. code:: bash

      # service-discover setup $(hostname -i) --password=My_Mesh_Password£0!

   .. hint:: Replace ``My_Mesh_Password£0!`` with a **robust** password of your choice.

   This command will:

   * find the hostname IP address (:command:`hostname -i`)

   * set the **cluster credential password** to
     ``My_Mesh_Password£0!``, which is used for setups, management,
     and to access the administration GUI. See section :ref:`mesh-gui`
     for more information.

   * store the setup in file
     :file:`/etc/zextras/service-discover/cluster-credentials.tar.gpg`

     .. warning:: Make sure to store the password in a safe place
        (like e.g., a password manager). In case the password is lost
        or the credential file becomes corrupted and unusable, you can
        :ref:`mesh-reset`.

   Complete |mesh| and |product| setup by running

   .. code:: console

      # pending setups

.. card::
   :class-header: sd-font-weight-bold sd-fs-5

   Step 7: Bootstrap Database of |file|
   ^^^^^

   The final steps is to bootstrap |file|\'s DB (replacing the example
   password **my_pg_password#3** with the chosen one):

   .. code:: console

      # PGPASSWORD=my_pg_password#3 carbonio-files-db-bootstrap carbonio-files-adm 127.0.0.1
